<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialization

var_jumps = 0; // For double jumping
var_jumped = 0; // Click once per jump
var_speed = 0.1; // Movement speed
var_height = 2; // Jumping (y-axis) height/speed
var_player = -1; // Player ID
image_speed = 0.4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 1 Controls (Keyboard A+S)

if var_player == 0 {
if not keyboard_check(ord("A")) and keyboard_check(ord("S")) {
    phy_speed_x += var_speed;
    sprite_index = spr_1right;
}
if keyboard_check(ord("A")) and not keyboard_check(ord("S")) {
    phy_speed_x -= var_speed;
    sprite_index = spr_1left;
}
if keyboard_check(ord("A")) and keyboard_check(ord("S")) and var_jumped == 0 {
    var_jumped = 1;
    phy_speed_y = -var_height;
    if place_meeting(x-16,y,obj_block)
        phy_speed_x = 10*var_speed;
    else if place_meeting(x+16,y,obj_block)
        phy_speed_x = 10*-var_speed;
}
if not keyboard_check(ord("A")) and not keyboard_check(ord("S"))
    sprite_index = spr_1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 2 Controls (Keyboard K+L)

if var_player == 1 {
if not keyboard_check(ord("K")) and keyboard_check(ord("L")) {
    phy_speed_x += var_speed;
    sprite_index = spr_2right;
}
if keyboard_check(ord("K")) and not keyboard_check(ord("L")) {
    phy_speed_x -= var_speed;
    sprite_index = spr_2left;
}
if keyboard_check(ord("K")) and keyboard_check(ord("L")) and var_jumped == 0 {
    var_jumped = 1;
    phy_speed_y = -var_height;
    if place_meeting(x-16,y,obj_block)
        phy_speed_x = 10*var_speed;
    else if place_meeting(x+16,y,obj_block)
        phy_speed_x = 10*-var_speed;
}
if not keyboard_check(ord("K")) and not keyboard_check(ord("L"))
    sprite_index = spr_2;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 3 Controls (Keyboard Arrows)

if var_player == 2 {
if not keyboard_check(vk_left) and keyboard_check(vk_right) {
    phy_speed_x += var_speed;
    sprite_index = spr_3right;
}
if keyboard_check(vk_left) and not keyboard_check(vk_right) {
    phy_speed_x -= var_speed;
    sprite_index = spr_3left;
}
if keyboard_check(vk_left) and keyboard_check(vk_right) and var_jumped == 0 {
    var_jumped = 1;
    phy_speed_y = -var_height;
    if place_meeting(x-16,y,obj_block)
        phy_speed_x = 10*var_speed;
    else if place_meeting(x+16,y,obj_block)
        phy_speed_x = 10*-var_speed;
}
if not keyboard_check(vk_left) and not keyboard_check(vk_right)
    sprite_index = spr_3;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player 4 Controls (Mouse)

if var_player == 3 {
if not mouse_check_button(mb_left) and mouse_check_button(mb_right) {
    phy_speed_x += var_speed;
    sprite_index = spr_4right;
}
if mouse_check_button(mb_left) and not mouse_check_button(mb_right) {
    phy_speed_x -= var_speed;
    sprite_index = spr_4left;
}
if mouse_check_button(mb_left) and mouse_check_button(mb_right) and var_jumped == 0 {
    var_jumped = 1;
    phy_speed_y = -var_height;
    if place_meeting(x-16,y,obj_block)
        phy_speed_x = 10*var_speed;
    else if place_meeting(x+16,y,obj_block)
        phy_speed_x = 10*-var_speed;
}
if not mouse_check_button(mb_left) and not mouse_check_button(mb_right)
    sprite_index = spr_4;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Should I play?

// Move to the right side of the room if "yes"!
if room == room0 {
    if x &lt; room_width/2
        global.players[var_player] = 0;
    else
        global.players[var_player] = 1;
}
else // Get killed in the next room!
    if global.players[var_player] == 0
        instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Lock Rotation

phy_rotation = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// obj_wall Collision
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// obj_player Collision
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_man">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// obj_man Collision

if place_meeting(phy_position_x,phy_position_y+24,obj_man)
    var_jumped = 0;
//if y &gt; other.y and other.phy_speed.y &gt;= 0
if other.var_deadly == 1
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// obj_block Collision

// If you touch the floor
if place_meeting(phy_position_x,phy_position_y+24,obj_block) {
    var_jumped = 0; // Reset number of jumps
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>6,9</point>
    <point>27,9</point>
    <point>27,46</point>
    <point>6,46</point>
  </PhysicsShapePoints>
</object>
